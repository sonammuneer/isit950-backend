generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "omitApi"]
  binaryTargets   = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String
  name        String
  phonenumber String
  dateofbirth String
  role        String?
  favourites  Favourites[]
  Review      Review[]
}

model Hotel {
  id          String     @id @default(uuid())
  name        String     @unique
  place       String
  adminemail  String
  description String?
  rating      Int?
  room        Room[]
  tags        Tags[]
  reviews     Review[]
  Bookings    Bookings[]
}

model Room {
  id           String     @id @default(uuid())
  name         String     @unique
  count        Int
  no_of_guests Int
  price        Int
  hotelid      String
  hotel        Hotel      @relation(fields: [hotelid], references: [id], onDelete: Cascade)
  Bookings     Bookings[]
}

model Bookings {
  id            String   @id @default(uuid())
  roomid        String
  room          Room     @relation(fields: [roomid], references: [id], onDelete: Cascade)
  startdate     DateTime
  enddate       DateTime
  bookinguserid String
  hotelid       String
  hotel         Hotel    @relation(fields: [hotelid], references: [id], onDelete: Cascade)
  booking_count Int
  no_of_guests  Int
}

model Tags {
  id      String @id @default(uuid())
  name    String
  hotelid String
  hotel   Hotel  @relation(fields: [hotelid], references: [id], onDelete: Cascade)
}

model Favourites {
  id      String @id @default(uuid())
  userid  String
  user    User   @relation(fields: [userid], references: [id], onDelete: Cascade)
  hotelid String
}

model Review {
  id          String @id @default(uuid())
  hotelid     String
  hotel       Hotel  @relation(fields: [hotelid], references: [id], onDelete: Cascade)
  description String
  rating      Int
  userid      String
  user        User   @relation(fields: [userid], references: [id], onDelete: Cascade)
}

model OnboardingRequests {
  id               String  @id @default(uuid())
  hotelname        String
  location         String
  hoteladminemail  String
  hoteldescription String?
}
